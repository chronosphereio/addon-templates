{"name":"CloudFlare-HTTP-v2","config":{"Name":"lua","match":"*","code":"cb_filter=require('calyptia.pr')([====================[[{\"type\":\"json_decode\",\"opts\":{\"src\":\"log\",\"dst\":\"decoded_json\"},\"comment\":\"\",\"id\":\"752aea08-44fd-4dcc-81e0-525fc61ff6f4\",\"active\":true},{\"type\":\"flatten\",\"opts\":{\"key\":\"decoded_json\",\"regex\":\"^.+$\",\"keyReplacement\":\"%1\",\"keepOrig\":false},\"comment\":\"\",\"id\":\"39ee9eb1-22ff-467d-97f2-49c43c64a9c6\",\"active\":true},{\"type\":\"block_keys\",\"opts\":{\"regex\":\"log\",\"matchCase\":false,\"regexEngine\":\"pcre2\",\"nestedPath\":\"\"},\"comment\":\"remove log field\",\"id\":\"d12a54f3-4869-455f-8dd9-61219941952a\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    for k, v in pairs(record) do\\n        -- check if the value is empty\\n        if v == '' or v == \\\"\\\" then\\n            -- delete the key\\n            record[k] = nil\\n        end\\n    end\\n    return 1, ts, record\\nend\\n\\n\\n\"},\"comment\":\"remove keys with empty values\",\"id\":\"3d76c962-1d02-41d6-9469-43b5bc0631ec\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record, code)\\n    -- Ensure all necessary fields exist before assigning to avoid runtime errors\\n    -- Mapping Cloudflare event fields to OCSF HTTP_Activity fields\\n    -- category_name = \\\"Network Activity\\\"\\n    -- class_name = \\\"HTTP Activity\\\"\\n    record['id'] = record[\\\"RayID\\\"]\\n    record['start_time'] = (record[\\\"EdgeStartTimestamp\\\"] or 0) -- Convert to seconds\\n    record['end_time'] = (record[\\\"EdgeEndTimestamp\\\"] or 0) -- Convert to seconds \\n\\n    record[\\\"http_response\\\"] = {\\n        content_type = record[\\\"EdgeResponseContentType\\\"] or \\\"\\\",\\n        http_headers = {\\n            origin_status = record[\\\"OriginResponseStatus\\\"] or 0,\\n            origin_time = record[\\\"OriginResponseTime\\\"] or 0,\\n            origin_bytes = record[\\\"OriginResponseBytes\\\"] or 0,\\n            compression = record[\\\"EdgeResponseCompression\\\"] or \\\"\\\",\\n            colo_id = record[\\\"EdgeColoID\\\"] or 0,\\n            colo_code = record[\\\"EdgeColoCode\\\"] or \\\"\\\",\\n        },\\n        length = record[\\\"EdgeResponseBytes\\\"] or 0,\\n        code = record[\\\"EdgeResponseStatus\\\"] or 0,\\n        response_content_type = record[\\\"EdgeResponseContentType\\\"] or \\\"\\\"\\n    }\\n\\n    record[\\\"http_request\\\"] = {\\n        http_method = record[\\\"ClientRequestMethod\\\"] or \\\"\\\",\\n        http_headers = {\\n            protocol = record[\\\"ClientRequestProtocol\\\"] or \\\"\\\"\\n        },\\n        url = {\\n            path = record[\\\"ClientRequestPath\\\"] or \\\"\\\",\\n            url_string = record[\\\"ClientRequestURI\\\"] or \\\"\\\"\\n        },\\n        host = record[\\\"ClientRequestHost\\\"] or \\\"\\\",\\n        user_agent = record[\\\"ClientRequestUserAgent\\\"] or \\\"\\\",\\n        length = record[\\\"ClientRequestBytes\\\"] or 0,\\n        referer = record[\\\"ClientRequestReferer\\\"] or \\\"\\\",\\n        version = record[\\\"ClientRequest\\\"] or \\\"\\\"\\n    }\\n\\n    record[\\\"src_endpoint\\\"] = {\\n        ip = record[\\\"ClientIP\\\"] or \\\"\\\",\\n        port = record[\\\"ClientSrcPort\\\"] or 0,\\n        location = {\\n            country = record[\\\"ClientCountry\\\"] or \\\"\\\"\\n        },\\n        type = record[\\\"ClientDeviceType\\\"] or \\\"\\\",\\n        autonomous_system = {\\n            number = record[\\\"ClientASN\\\"] or 0\\n        }\\n    }\\n\\n    record[\\\"dst_endpoint\\\"] = {\\n        ip = record[\\\"OriginIP\\\"] or \\\"\\\",\\n        intermediate_ips = {\\n            record[\\\"EdgeServerIP\\\"] or \\\"\\\"\\n        }\\n    }\\n\\n    record[\\\"tls\\\"] = {\\n        cipher = record[\\\"ClientSSLCipher\\\"] or \\\"\\\",\\n        version = record[\\\"ClientSSLProtocol\\\"] or \\\"\\\"\\n    }\\n\\n    record[\\\"traffic\\\"] = {\\n        bytes_out = record[\\\"ClientRequestBytes\\\"] or 0,\\n        bytes_in = record[\\\"EdgeResponseBytes\\\"] or 0\\n    }\\n\\n    record[\\\"firewall_rule\\\"] = {\\n        match_details = record[\\\"FirewallMatchesRuleIDs\\\"] or {}\\n    }\\n\\n    record[\\\"connection_info\\\"] = {\\n        session = {\\n            uid = record[\\\"RayID\\\"] or \\\"\\\",\\n            uuid = record[\\\"ParentRayID\\\"] or \\\"\\\"\\n        }\\n    }\\n\\n    -- Remove original fields after mapping\\n    record[\\\"RayID\\\"] = nil\\n    record[\\\"EdgeStartTimestamp\\\"] = nil\\n    record[\\\"EdgeEndTimestamp\\\"] = nil\\n    record[\\\"EdgeResponseContentType\\\"] = nil\\n    record[\\\"OriginResponseStatus\\\"] = nil\\n    record[\\\"OriginResponseTime\\\"] = nil\\n    record[\\\"OriginResponseBytes\\\"] = nil\\n    record[\\\"EdgeResponseCompression\\\"] = nil\\n    record[\\\"EdgeColoID\\\"] = nil\\n    record[\\\"EdgeColoCode\\\"] = nil\\n    record[\\\"EdgeResponseBytes\\\"] = nil\\n    record[\\\"EdgeResponseStatus\\\"] = nil\\n    record[\\\"ClientRequestMethod\\\"] = nil\\n    record[\\\"ClientRequestProtocol\\\"] = nil\\n    record[\\\"ClientRequestPath\\\"] = nil\\n    record[\\\"ClientRequestURI\\\"] = nil\\n    record[\\\"ClientRequestHost\\\"] = nil\\n    record[\\\"ClientRequestUserAgent\\\"] = nil\\n    record[\\\"ClientRequestBytes\\\"] = nil\\n    record[\\\"ClientRequestReferer\\\"] = nil\\n    record[\\\"ClientRequest\\\"] = nil\\n    record[\\\"ClientIP\\\"] = nil\\n    record[\\\"ClientSrcPort\\\"] = nil\\n    record[\\\"ClientCountry\\\"] = nil\\n    record[\\\"ClientDeviceType\\\"] = nil\\n    record[\\\"ClientASN\\\"] = nil\\n    record[\\\"ClientSSLCipher\\\"] = nil\\n    record[\\\"ClientSSLProtocol\\\"] = nil\\n    record[\\\"FirewallMatchesRuleIDs\\\"] = nil\\n    record[\\\"ParentRayID\\\"] = nil\\n\\n    -- Return the transformed OCSF record with the status code\\n    return code, ts, record\\nend\\n\"},\"comment\":\"map fields into OCSF - Network Activity Class\",\"id\":\"e38cdfeb-f991-411b-9378-0b08fd373e20\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    -- Create a new table for unmapped fields\\n    local unmapped = {}\\n\\n    -- List of fields to exclude from being moved to \\\"unmapped\\\"\\n    local excluded_fields = {\\n        action = true,\\n        action_id = true,\\n        activity_name = true,\\n        activity_id = true,\\n        app_name = true,\\n        authorizations = true,\\n        category_name = true,\\n        category_uid = true,\\n        class_name = true,\\n        class_uid = true,\\n        connection_info = true,\\n        count = true,\\n        dst_endpoint = true,\\n        disposition = true,\\n        disposition_id = true,\\n        duration = true,\\n        end_time = true,\\n        enrichments = true,\\n        time = true,\\n        file = true,\\n        firewall_rule = true,\\n        http_cookies = true,\\n        http_request = true,\\n        http_response = true,\\n        http_status = true,\\n        ja4_fingerprint_list = true,\\n        attacks = true,\\n        malware = true,\\n        message = true,\\n        metadata = true,\\n        observables = true,\\n        proxy = true,\\n        raw_data = true,\\n        severity = true,\\n        severity_id = true,\\n        src_endpoint = true,\\n        start_time = true,\\n        status = true,\\n        status_code = true,\\n        status_detail = true,\\n        status_id = true,\\n        tls = true,\\n        timezone_offset = true,\\n        traffic = true,\\n        type_uid = true,\\n        type_name = true\\n    }\\n\\n    -- Iterate through the fields in the record\\n    for key, value in pairs(record) do\\n        -- Check if the key is not in the excluded fields list\\n        if not excluded_fields[key] then\\n            table.insert(unmapped, { [key] = value })\\n            -- Remove the field from the main record\\n            record[key] = nil\\n        end\\n    end\\n\\n    -- Add the unmapped array to the record if there are unmapped fields\\n    if #unmapped > 0 then\\n        record[\\\"unmapped\\\"] = unmapped\\n    end\\n\\n    return 1, ts, record\\nend\\n\"},\"comment\":\"move fields not in OCSF schema to unmapped\",\"id\":\"a11ea122-9d47-4193-bd33-1f468ba0f4c6\",\"active\":false}]]====================])","call":"cb_filter"},"input":"{\"BotScore\":20,\"BotScoreSrc\":\"Verified Bot\",\"CacheCacheStatus\":\"unknown\",\"CacheResponseBytes\":0,\"CacheResponseStatus\":0,\"CacheTieredFill\":false,\"ClientASN\":15169,\"ClientCountry\":\"us\",\"ClientDeviceType\":\"desktop\",\"ClientIP\":\"89.160.20.156\",\"ClientIPClass\":\"noRecord\",\"ClientRequestBytes\":2577,\"ClientRequestHost\":\"cf-analytics.com\",\"ClientRequestMethod\":\"POST\",\"ClientRequestPath\":\"/wp-cron.php\",\"ClientRequestProtocol\":\"HTTP/1.1\",\"ClientRequestReferer\":\"https://cf-analytics.com/wp-cron.php?doing_wp_cron=1564759748.3962020874023437500000\",\"ClientRequestURI\":\"/wp-cron.php?doing_wp_cron=1564759748.3962020874023437500000\",\"ClientRequestUserAgent\":\"WordPress/5.2.2;https://cf-analytics.com\",\"ClientSSLCipher\":\"ECDHE-ECDSA-AES128-GCM-SHA256\",\"ClientSSLProtocol\":\"TLSv1.2\",\"ClientSrcPort\":55028,\"EdgeColoID\":14,\"EdgeEndTimestamp\":\"2019-08-02T15:29:08Z\",\"EdgePathingOp\":\"ban\",\"EdgePathingSrc\":\"filter_based_firewall\",\"EdgePathingStatus\":\"captchaNew\",\"EdgeRateLimitAction\":\"\",\"EdgeRateLimitID\":0,\"EdgeRequestHost\":\"\",\"EdgeResponseBytes\":2848,\"EdgeResponseCompressionRatio\":2.64,\"EdgeResponseContentType\":\"text/html\",\"EdgeResponseStatus\":403,\"EdgeServerIP\":\"\",\"EdgeStartTimestamp\":\"2019-08-02T15:29:08Z\",\"FirewallMatchesActions\":[\"simulate\",\"challenge\"],\"FirewallMatchesSources\":[\"firewallRules\",\"firewallRules\"],\"FirewallMatchesRuleIDs\":[\"094b71fea25d4860a61fa0c6fbbd8d8b\",\"e454fd4a0ce546b3a9a462536613692c\"],\"OriginIP\":\"\",\"OriginResponseBytes\":0,\"OriginResponseHTTPExpires\":\"\",\"OriginResponseHTTPLastModified\":\"\",\"OriginResponseStatus\":0,\"OriginResponseTime\":0,\"OriginSSLProtocol\":\"unknown\",\"ParentRayID\":\"00\",\"RayID\":\"500115ec386354d8\",\"SecurityLevel\":\"med\",\"WAFAction\":\"unknown\",\"WAFFlags\":\"0\",\"WAFMatchedVar\":\"\",\"WAFProfile\":\"unknown\",\"WAFRuleID\":\"\",\"WAFRuleMessage\":\"\",\"WorkerCPUTime\":0,\"WorkerStatus\":\"unknown\",\"WorkerSubrequest\":false,\"WorkerSubrequestCount\":0,\"ZoneID\":155978002}\n{\"BotScore\":1,\"BotScoreSrc\":\"Heuristics\",\"CacheCacheStatus\":\"hit\",\"CacheResponseBytes\":26888,\"CacheResponseStatus\":200,\"CacheTieredFill\":true,\"ClientASN\":1136,\"ClientCountry\":\"nl\",\"ClientDeviceType\":\"desktop\",\"ClientIP\":\"89.160.20.156\",\"ClientIPClass\":\"noRecord\",\"ClientRequestBytes\":5324,\"ClientRequestHost\":\"eqlplayground.io\",\"ClientRequestMethod\":\"GET\",\"ClientRequestPath\":\"/40865/bundles/plugin/securitySolution/8.0.0/securitySolution.chunk.9.js\",\"ClientRequestProtocol\":\"HTTP/1.1\",\"ClientRequestReferer\":\"https://eqlplayground.io/s/eqldemo/app/security/timelines/default?sourcerer=(default:!(.siem-signals-eqldemo))&timerange=(global:(linkTo:!(),timerange:(from:%272021-03-03T19:55:15.519Z%27,fromStr:now-24h,kind:relative,to:%272021-03-04T19:55:15.519Z%27,toStr:now)),timeline:(linkTo:!(),timerange:(from:%272020-03-04T19:55:28.684Z%27,fromStr:now-1y,kind:relative,to:%272021-03-04T19:55:28.692Z%27,toStr:now)))&timeline=(activeTab:eql,graphEventId:%27%27,id:%2769f93840-7d23-11eb-866c-79a0609409ba%27,isOpen:!t)\",\"ClientRequestURI\":\"/40865/bundles/plugin/securitySolution/8.0.0/securitySolution.chunk.9.js\",\"ClientRequestUserAgent\":\"Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/91.0.4472.124Safari/537.36\",\"ClientSSLCipher\":\"NONE\",\"ClientSSLProtocol\":\"none\",\"ClientSrcPort\":0,\"ClientXRequestedWith\":\"\",\"EdgeColoCode\":\"33.147.138.217\",\"EdgeColoID\":20,\"EdgeEndTimestamp\":1625752958875000000,\"EdgePathingOp\":\"wl\",\"EdgePathingSrc\":\"macro\",\"EdgePathingStatus\":\"nr\",\"EdgeRateLimitAction\":\"\",\"EdgeRateLimitID\":0,\"EdgeRequestHost\":\"eqlplayground.io\",\"EdgeResponseBytes\":24743,\"EdgeResponseCompressionRatio\":0,\"EdgeResponseContentType\":\"application/javascript\",\"EdgeResponseStatus\":200,\"EdgeServerIP\":\"89.160.20.156\",\"EdgeStartTimestamp\":1625752958812000000,\"FirewallMatchesActions\":[],\"FirewallMatchesRuleIDs\":[],\"FirewallMatchesSources\":[],\"OriginIP\":\"\",\"OriginResponseBytes\":0,\"OriginResponseHTTPExpires\":\"\",\"OriginResponseHTTPLastModified\":\"\",\"OriginResponseStatus\":0,\"OriginResponseTime\":0,\"OriginSSLProtocol\":\"unknown\",\"ParentRayID\":\"66b9d9f88b5b4c4f\",\"RayID\":\"66b9d9f890ae4c4f\",\"SecurityLevel\":\"off\",\"WAFAction\":\"unknown\",\"WAFFlags\":\"0\",\"WAFMatchedVar\":\"\",\"WAFProfile\":\"unknown\",\"WAFRuleID\":\"\",\"WAFRuleMessage\":\"\",\"WorkerCPUTime\":0,\"WorkerStatus\":\"unknown\",\"WorkerSubrequest\":true,\"WorkerSubrequestCount\":0,\"ZoneID\":393347122}\n{\"BotScore\":1,\"BotScoreSrc\":\"Heuristics\",\"CacheCacheStatus\":\"unknown\",\"CacheResponseBytes\":0,\"CacheResponseStatus\":0,\"CacheTieredFill\":false,\"ClientASN\":1136,\"ClientCountry\":\"nl\",\"ClientDeviceType\":\"desktop\",\"ClientIP\":\"89.160.20.156\",\"ClientIPClass\":\"noRecord\",\"ClientRequestBytes\":2520,\"ClientRequestHost\":\"eqlplayground.io\",\"ClientRequestMethod\":\"GET\",\"ClientRequestPath\":\"/s/eqldemo/security/account\",\"ClientRequestProtocol\":\"HTTP/2\",\"ClientRequestReferer\":\"\",\"ClientRequestURI\":\"/s/eqldemo/security/account\",\"ClientRequestUserAgent\":\"Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/91.0.4472.124Safari/537.36\",\"ClientSSLCipher\":\"AEAD-AES128-GCM-SHA256\",\"ClientSSLProtocol\":\"TLSv1.3\",\"ClientSrcPort\":61593,\"ClientXRequestedWith\":\"\",\"EdgeColoCode\":\"AMS\",\"EdgeColoID\":20,\"EdgeEndTimestamp\":1625754264684000000,\"EdgePathingOp\":\"ban\",\"EdgePathingSrc\":\"filter_based_firewall\",\"EdgePathingStatus\":\"nr\",\"EdgeRateLimitAction\":\"\",\"EdgeRateLimitID\":0,\"EdgeRequestHost\":\"183.53.30.34\",\"EdgeResponseBytes\":2066,\"EdgeResponseCompressionRatio\":2.45,\"EdgeResponseContentType\":\"text/html\",\"EdgeResponseStatus\":403,\"EdgeServerIP\":\"\",\"EdgeStartTimestamp\":1625754264676000000,\"FirewallMatchesActions\":[\"block\"],\"FirewallMatchesRuleIDs\":[\"391eb601201e4f2a81038910f2b63f6d\"],\"FirewallMatchesSources\":[\"firewallRules\"],\"OriginIP\":\"89.160.20.156\",\"OriginResponseBytes\":0,\"OriginResponseHTTPExpires\":\"\",\"OriginResponseHTTPLastModified\":\"\",\"OriginResponseStatus\":0,\"OriginResponseTime\":0,\"OriginSSLProtocol\":\"unknown\",\"ParentRayID\":\"00\",\"RayID\":\"66b9f9da396e4c01\",\"SecurityLevel\":\"unk\",\"WAFAction\":\"unknown\",\"WAFFlags\":\"0\",\"WAFMatchedVar\":\"\",\"WAFProfile\":\"unknown\",\"WAFRuleID\":\"\",\"WAFRuleMessage\":\"\",\"WorkerCPUTime\":0,\"WorkerStatus\":\"unknown\",\"WorkerSubrequest\":false,\"WorkerSubrequestCount\":0,\"ZoneID\":393347122}\n{\"BotScore\":1,\"BotScoreSrc\":\"Heuristics\",\"CacheCacheStatus\":\"unknown\",\"CacheResponseBytes\":0,\"CacheResponseStatus\":0,\"CacheTieredFill\":false,\"ClientASN\":1136,\"ClientCountry\":\"nl\",\"ClientDeviceType\":\"desktop\",\"ClientIP\":\"89.160.20.156\",\"ClientIPClass\":\"noRecord\",\"ClientRequestBytes\":2520,\"ClientRequestHost\":\"eqlplayground.io\",\"ClientRequestMethod\":\"GET\",\"ClientRequestPath\":\"/s/eqldemo/security/account\",\"ClientRequestProtocol\":\"HTTP/2\",\"ClientRequestReferer\":\"\",\"ClientRequestURI\":\"/s/eqldemo/security/account\",\"ClientRequestUserAgent\":\"Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/91.0.4472.124Safari/537.36\",\"ClientSSLCipher\":\"AEAD-AES128-GCM-SHA256\",\"ClientSSLProtocol\":\"TLSv1.3\",\"ClientSrcPort\":61593,\"ClientXRequestedWith\":\"\",\"EdgeColoCode\":\"AMS\",\"EdgeColoID\":20,\"EdgeEndTimestamp\":1625754264,\"EdgePathingOp\":\"ban\",\"EdgePathingSrc\":\"filter_based_firewall\",\"EdgePathingStatus\":\"nr\",\"EdgeRateLimitAction\":\"\",\"EdgeRateLimitID\":0,\"EdgeRequestHost\":\"183.53.30.34\",\"EdgeResponseBytes\":2066,\"EdgeResponseCompressionRatio\":2.45,\"EdgeResponseContentType\":\"text/html\",\"EdgeResponseStatus\":403,\"EdgeServerIP\":\"\",\"EdgeStartTimestamp\":1625754264,\"FirewallMatchesActions\":[\"block\"],\"FirewallMatchesRuleIDs\":[\"391eb601201e4f2a81038910f2b63f6d\"],\"FirewallMatchesSources\":[\"firewallRules\"],\"OriginIP\":\"89.160.20.156\",\"OriginResponseBytes\":0,\"OriginResponseHTTPExpires\":\"\",\"OriginResponseHTTPLastModified\":\"\",\"OriginResponseStatus\":0,\"OriginResponseTime\":0,\"OriginSSLProtocol\":\"unknown\",\"ParentRayID\":\"00\",\"RayID\":\"66b9f9da396e4c01\",\"SecurityLevel\":\"unk\",\"WAFAction\":\"unknown\",\"WAFFlags\":\"0\",\"WAFMatchedVar\":\"\",\"WAFProfile\":\"unknown\",\"WAFRuleID\":\"\",\"WAFRuleMessage\":\"\",\"WorkerCPUTime\":0,\"WorkerStatus\":\"unknown\",\"WorkerSubrequest\":false,\"WorkerSubrequestCount\":0,\"ZoneID\":393347122}","isRawInput":true,"pipelineVersion":"24.9.1"}